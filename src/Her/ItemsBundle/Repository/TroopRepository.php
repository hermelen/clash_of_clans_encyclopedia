<?php

namespace Her\ItemsBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Her\ItemsBundle\Entity\GeneralTroop;

/**
 * TroopRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TroopRepository extends \Doctrine\ORM\EntityRepository
{
  public function herosOrderByLevel($single)
  {
    $qb = $this->createQueryBuilder('t');

    $qb->orderBy('t.level', 'ASC')
    ->andWhere('t.specialHero = :specialHero')
    ->setParameter('specialHero',$single);
    ;

    return $qb
      ->getQuery()
      ->getResult()
    ;
  }

  public function entityOrderByLevel($generalEntity)
  {
    $qb = $this->createQueryBuilder('t');

    $qb->orderBy('t.level', 'ASC')
    ->andWhere('t.generalTroop = :generalTroop')
    ->setParameter('generalTroop',$generalEntity);
    ;

    return $qb
      ->getQuery()
      ->getResult()
    ;
  }

  public function entityByLevel($generalTroop, $level)
  {
    $qb = $this->createQueryBuilder('t');

    $qb->where('t.generalTroop = :generalTroop')
    ->setParameter('generalTroop',$generalTroop)
    ->andWhere('t.level = :level')
    ->setParameter('level', $level)
    ;

    return $qb
      ->getQuery()
      ->getOneOrNullResult()
    ;
  }

  public function entityByLaboratory($laboratory)
  {
    $qb = $this->createQueryBuilder('t');

    $qb->where('t.laboratory = :laboratory')
    ->setParameter('laboratory',$laboratory)
    ;

    return $qb
      ->getQuery()
      ->getResult()
    ;
  }

  public function getHeroLevels($generalSpecialHero)
    {
        $generalTroop = $generalSpecialHero->getGeneralTroop();
        $qb = $this->createQueryBuilder('t');

        $qb->where('t.generalTroop = :generalTroop')
           ->setParameter('generalTroop', $generalTroop)
           ->orderBy('t.level', 'ASC');

        return $qb;
    }

}
